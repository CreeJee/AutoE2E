#lib
union Primitive = String | Int | Boolean | Float
enum Property {
    width
    height
}
enum TagEnum {
    SUCCESS
    WARN
    TEST_ERROR
    UNKNOWN_ERR
}
enum LogType {
    INFO
    WARN
    DANGER
}
#atomic
interface Node {
    uid: ID!
}
interface Log {
    type: LogType!
    message: String!
}
#service type
type Item implements Node {
    name: String!
}
type Tag implements Log {
    name: String!
}
type DocumentNode implements Node {
    children: [DocumentNode!]!
    name: String!
}
type Task {
    current: DocumentNode!
    task: String!
    param: [Primitive!]!
}
#mapping
type Tasks {
    items: [Task!]!
}

#RootType
type Query {
    Property: Property
    Tag: Tag
    Window: DocumentNode
    Tasks: Tasks
}
#
